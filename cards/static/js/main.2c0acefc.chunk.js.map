{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["score","Card","props","state","showing","face","show","bind","this","disabled","timeout","setState","defaultCard","className","onClick","React","Component","getFaces","faces","sort","Math","floor","random","Table","cards","timer","round","hasClicked","resetTimer","Clicked","updateScore","resetCount","clearTimeout","setTimeout","i","children","prevProps","App","resets","resetTable","window","addEventListener","e","code","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c0acefc.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\n\nlet score = 0;\nclass Card extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      showing:false,\n      face:0\n    }\n    this.show = this.show.bind(this);\n  }\n  show () {\n    if(this.state.showing || this.props.disabled){return}\n    if(this.props.timeout){\n      this.setState({face:this.props.defaultCard})\n    } else {\n      this.setState({face:4})\n    }\n    this.setState({showing:true})\n  }\n  render () {\n    return (\n      <div className='card' onClick={this.show}>\n        {this.state.showing? this.state.face : '?'}\n      </div>\n    )\n  }\n}\n\nfunction getFaces() {\n  let faces = [1,2,3,4];\n  faces = faces.sort(()=>{\n    return -1 + Math.floor(Math.random() * 2);\n  })\n  return faces;\n}\n\nclass Table extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      cards:getFaces(),\n      timeout:false,\n      timer:null,\n      defaultCard: 1 + Math.round(Math.random() * 2),\n      hasClicked: false\n    }\n    this.resetTimer = this.resetTimer.bind(this);\n    this.Clicked = this.Clicked.bind(this);\n  }\n\n  Clicked () {\n    if(this.state.hasClicked){return false};\n    this.setState({hasClicked:true})\n    if(!this.state.timeout){\n      score += 1;\n      this.props.updateScore()\n    }\n\n  }\n\n  render() {\n    return (\n      <main key={this.props.resetCount} onClick={this.Clicked}>\n        <Card disabled={this.state.hasClicked} timeout={this.state.timeout} defaultCard={this.state.defaultCard} showing={false} />\n        <Card disabled={this.state.hasClicked} timeout={this.state.timeout} defaultCard={this.state.defaultCard} showing={false} />\n        <Card disabled={this.state.hasClicked} timeout={this.state.timeout} defaultCard={this.state.defaultCard} showing={false} />\n        <Card disabled={this.state.hasClicked} timeout={this.state.timeout} defaultCard={this.state.defaultCard} showing={false} />\n      </main>\n    )\n  }\n\n  resetTimer () {\n    if(this.state.timeout){return false}\n    clearTimeout(this.state.timer);\n    this.setState({\n      timer: setTimeout(()=>{\n      this.setState({timeout:true});\n      for(let i in this.children){\n        this.children[i].props.timeout=true;\n      }\n    },500)\n    });\n  }\n\n  componentDidMount () {\n    if(!this.state.timeout){\n      this.resetTimer();\n    }\n    this.setState({hasClicked:false})\n  }\n\n  componentDidUpdate (prevProps){\n    // clearTimeout(this.state.timer);\n    if(prevProps.resetCount !== this.props.resetCount) {\n      this.setState({\n        hasClicked:false,\n        timeout:false,\n        defaultCard: 1 + Math.round(Math.random() * 2)\n      }, this.resetTimer);\n    }\n  }\n}\nclass App extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      resets:0,\n      score:0\n    }\n    this.resetTable = this.resetTable.bind(this);\n    this.updateScore = this.updateScore.bind(this);\n  }\n\n  resetTable () {\n    this.setState({resets: this.state.resets+1})\n  }\n  updateScore () {\n    this.setState({score:score})\n  }\n  componentDidMount () {\n    window.addEventListener(\"keyup\",(e)=>{\n      if(e.code===\"Space\"){\n        this.resetTable();\n      }\n    },false)\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h1 id=\"score\">{this.state.score}</h1>\n        </header>\n        <Table updateScore={this.updateScore} resetCount={this.state.resets}/>\n        <footer>\n        <button onClick={this.resetTable}>again</button><br/>(space bar)\n\n        </footer>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}